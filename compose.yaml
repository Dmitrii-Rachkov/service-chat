# Версия синтаксиса
version: "3.8"
# Далее объект services в котором описываются все наши контейнеры
services:
  # Контейнер service-chat который написан на go
  service-chat:
    # Далее напишем ряд аргументов
    # build будет искать Dockerfile в текущей директории (./), на основании которого соберет контейнер
    build: ./
    # command, в нём указываем команды, которые будут запущены внутри контейнера при его запуске
    # в нашем случае мы должны запустить скомпилированный бинарный файл нашего приложения
    command: ./chat-main
    # ports, здесь указываем порты как при обычном запуске контейнера, т.е. порт внутри контейнера и снаружи
    ports:
      - "9000:9000"
    # depends_on, здесь указываем название других контейнеров от которых зависит текущий контейнер
    # укажем имя контейнера с базой данных - db
    # текущий контейнер не запустится пока не запустится db
    depends_on:
      db:
        condition: service_healthy
    # environment, здесь указываем имена и значения переменных окружения, например пароль базы данных
    #environment:
      #- DB_PASSWORD=qwerty

    # другой способ хранить пароль в файле
    secrets:
      - db-password

    # Порядок аргументов можно менять, это не влияет на результат


  # Контейнер db в котором будет наша база данных postgres
  db:
    # restart, запускаем контейнер при запуске самого docker или при перезапуске нашего компьютера
    restart: always
    # image, передаём название образа postgres
    image: postgres:latest
    # имя пользователя
    user: postgres
    # файл с паролем базы данных
    secrets:
      - db-password
    # Место хранения данных базы,
    volumes:
      - db-data:/var/lib/postgresql/data
    # environment, здесь указываем имена и значения переменных окружения базы данных
    environment:
      - POSTGRES_DB=db_chat
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    # ports для базы данных
    ports:
      - "5436:5432"
    # Проверяем, что база данных работает и также добавляем retry
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

# volumes для хранения данных из базы данных postgres
volumes:
  db-data:

# храним пароль для базы данных в файле password.txt
secrets:
  db-password:
    file: internal/db/password.txt


